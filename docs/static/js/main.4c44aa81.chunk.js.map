{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","defaultCategories","categories","ReactDOM","render","document","getElementById"],"mappings":"sLAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAU,IAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,uBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOlB,UACI,4BAAKD,IACL,uBACAQ,KAAK,OACLC,MAAOT,EACPU,SAnBkB,SAACP,GAAD,OAAOF,EAAeE,EAAEQ,OAAOF,c,+BCNhDG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAICA,EAAKC,OAJN,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAchBM,GAdgB,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACnC,OACE,sBAAKc,UAAU,4CAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACxB,ECF0B,SAACA,GAEzB,MAAyBd,mBAAU,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAZAC,qBAAW,WACPxB,EAAQC,GACPwB,MAAM,SAAAd,GAECY,EAAU,CACNf,KAAKG,EACLU,SAAS,SAKtB,CAACpB,IACGqB,EDlBiBI,CAAazB,GAA/BO,EAAR,EAAQA,KAAMa,EAAd,EAAcA,QAEd,OACE,qCACE,6BAAKpB,IAEJoB,GAAW,mBAAGJ,UAAU,mCAAb,sBAEZ,qBAAKA,UAAU,YAAf,SACGT,EAAKE,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEgBjBe,EA1BM,SAAC,GAAgC,IAAD,IAA7BC,yBAA6B,MAAT,GAAS,EACnD,EAAoCzC,mBAASyC,GAA7C,mBAAOC,EAAP,KAAmB3C,EAAnB,KAEA,OACE,qCACE,qBAAK+B,UAAU,WAAf,SACE,8CAGF,yIAIA,cAAC,EAAD,CAAa/B,cAAeA,IAC5B,uBACA,uBAEA,6BACG2C,EAAWnB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCnBxB6B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,U","file":"static/js/main.4c44aa81.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState( '' );\r\n   \r\n    const handleInputChange = (e) => setInputValue (e.target.value);\r\n   \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <p>{ inputValue }</p>\r\n            <input\r\n            type='text'\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            ></input>\r\n        </form>\r\n    )\r\n\r\n    }\r\n\r\n    AddCategory.propTypes= {\r\n        setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async (category) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=15&api_key=0zU8JAPcxJcU9UaMSJK9YmmhTsZGZowC`;\r\n    const resp = await fetch (url);\r\n    const {data}= await resp.json();\r\n\r\n    const gifs = data.map (img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\nreturn gifs;\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__heartBeat\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nGifGridItem.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n\r\n      {loading && <p className=\"animate__animated animate__flash\">Cargando</p>}\r\n\r\n      <div className=\"card-grid\">\r\n        {data.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { getGifs } from '../helpers/getGifs';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState]= useState ({\r\n        data: [],\r\n        loading: true\r\n    });\r\n \r\n\r\n    useEffect( ()=>{\r\n        getGifs(category)\r\n        .then (img => {\r\n\r\n                setState ({\r\n                    data:img,\r\n                    loading: false\r\n                });\r\n\r\n        })\r\n\r\n    }, [category])\r\n    return state;\r\n\r\n\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\nimport './index.css';\r\n\r\nconst GifExpertApp = ({ defaultCategories = [] }) => {\r\n  const [categories, setCategories] = useState(defaultCategories);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"titleGif\">\r\n        <h1>GifExpert:</h1>\r\n      </div>\r\n\r\n      <h3>\r\n        ColocÃ¡ una palabra o frase clave y presionÃ¡ \"Enter\" para buscar tus gifs\r\n        preferidos! ðŸ˜Ž\r\n      </h3>\r\n      <AddCategory setCategories={setCategories} />\r\n      <br />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}